{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import pandas as pd\
import numpy as np\
\
# Assuming pipeline object is loaded as coe_pipeline\
pipe = coe_pipeline\
\
# Create output folder\
import os\
os.makedirs("model_params_dump", exist_ok=True)\
\
### ---- Extract Vectorizer ----\
vectorizer = pipe.named_steps['preprocessor'] \\\
                 .transformers_[0][1] \\\
                 .named_steps['vectorizer']\
\
# Save vectorizer config\
vec_config = vectorizer.get_params()\
pd.DataFrame(list(vec_config.items()), columns=["parameter", "value"]) \\\
    .to_csv("model_params_dump/vectorizer_config.csv", index=False)\
\
# Save vocabulary\
vocab_df = pd.DataFrame(list(vectorizer.vocabulary_.items()), columns=["token", "index"])\
vocab_df.to_csv("model_params_dump/vectorizer_vocabulary.csv", index=False)\
\
# Save IDF values\
if hasattr(vectorizer, "idf_"):\
    idf_df = pd.DataFrame(\{\
        "token": [t for t, i in sorted(vectorizer.vocabulary_.items(), key=lambda x: x[1])],\
        "idf": vectorizer.idf_\
    \})\
    idf_df.to_csv("model_params_dump/vectorizer_idf.csv", index=False)\
\
### ---- Extract Classifier ----\
classifier = pipe.named_steps['classifier']\
\
# CalibratedClassifierCV parameters\
calib_config = classifier.get_params()\
pd.DataFrame(list(calib_config.items()), columns=["parameter", "value"]) \\\
    .to_csv("model_params_dump/calibrator_config.csv", index=False)\
\
# Base estimator (LinearSVC)\
base_est = classifier.base_estimator\
svc_config = base_est.get_params()\
pd.DataFrame(list(svc_config.items()), columns=["parameter", "value"]) \\\
    .to_csv("model_params_dump/linear_svc_config.csv", index=False)\
\
# LinearSVC weights (coef_ and intercept_)\
if hasattr(base_est, "coef_"):\
    coef_df = pd.DataFrame(base_est.coef_)\
    coef_df.to_csv("model_params_dump/linear_svc_coef.csv", index=False)\
\
if hasattr(base_est, "intercept_"):\
    intercept_df = pd.DataFrame(base_est.intercept_)\
    intercept_df.to_csv("model_params_dump/linear_svc_intercept.csv", index=False)\
\
# Calibration parameters (sigmoid or isotonic)\
for i, calib in enumerate(classifier.calibrators_):\
    if calib is None:\
        continue\
    calib_df = pd.DataFrame(\{\
        "a": calib.a_.ravel(),\
        "b": calib.b_.ravel()\
    \})\
    calib_df.to_csv(f"model_params_dump/calibrator_\{i\}_params.csv", index=False)\
\
print("\uc0\u9989  All pipeline parameters dumped into 'model_params_dump/' folder.")\
}